openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/employees:
    get:
      summary: Get all Employees
      description: Call to get the list of employees
      tags:
        - employee-controller
      operationId: showAllEmployees
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    put:
      summary: Add new Employee
      description: Call to create new Employee
      tags:
        - employee-controller
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
    post:
      summary: Update Employee
      description: Call to update Employee info
      tags:
        - employee-controller
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /api/employees/{id}:
    get:
      summary: Get an Employee by ID
      description: Call to get an employee by id
      tags:
        - employee-controller
      operationId: getEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
    delete:
      summary: Delete employee by ID
      description: Call to delete employee
      tags:
        - employee-controller
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
components:
  schemas:
    Employee:
      required:
        - departmentId
        - firstName
        - jobTitle
        - lastName
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        departmentId:
          type: integer
          format: int32
        jobTitle:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE

    Message:
      type: object
      properties:
        message:
          type: string
